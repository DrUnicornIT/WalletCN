export class ProviderRpcError extends Error {
    constructor(error) {
        super(error.message);
        this.message = error.message;
        this.code = error.code;
        this.data = error.data;
    }
}
export const defaultWalletUnavailableMsg = ({ label }) => `Please install or enable ${label} to continue`;
export const isWalletAvailable = (provider, checkProviderIdentity, device) => {
    if (provider && provider.providers && Array.isArray(provider.providers)) {
        return !!provider.providers.filter(provider => checkProviderIdentity({ provider, device })).length;
    }
    else {
        return checkProviderIdentity({ provider, device });
    }
};
